---
  - hosts: RemoteHost
    roles:
      - ansible-consul
      - nginxinc.nginx
      - brianshumate.nomad
      - brianshumate.vault
    become: true
    vars:
      key_file: /etc/ssl/private/services.key
      cert_file: /etc/ssl/certs/services.crt
      nginx_dest: /etc/nginx/conf.d/ssl.conf
      nginx_dest2: /etc/nginx/conf.d/default.conf
      token: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          64643662643663343731396535653236393332356138373931343066623064383333666330636265
          3737313031626432623236646663643634393731356134630a626430613339373930633238643132
          30616437356238333163663632663333303262356164303039616165366138623963616365643738
          3033383064663836340a323234623862633338353635393165323261646434333562353064366437
          35383936303362346566663934646534616439643935623838633735616261336364

    pre_tasks:

      - name: Install Firewalld
        yum: name=firewalld state=present

      - name: Start Firewalld
        service: name=firewalld state=started

      - name: Firewall Port Opening Party
        firewalld:
          port: "{{ item }}"
          zone: public
          permanent: yes
          immediate: yes
          state: enabled
        with_items:
          - 80/tcp
          - 443/tcp
          - 8500/tcp
          - 8200/tcp
          - 8300/tcp
          - 8301/tcp #TODO
          - 4646/tcp

      - name: SELinux Allow Port Party
        seport:
          ports: "{{ item }}"
          proto: tcp
          setype: dns_port_t
          state: present
        with_items:
          - 8500
          - 8200
          - 4646

      - name: Create SSL Dir (certs)
        ansible.builtin.file:
          path: /etc/ssl/certs
          state: directory

      - name: Create SSL Dir (private)
        ansible.builtin.file:
          path: /etc/ssl/private 
          state: directory

      - name: Get Key
        uri:
          url: http://95.217.43.28:8200/v1/testcert/key
          method: GET
          headers: 
            X-Vault-Token: "{{token}}"
          return_content: yes
        register: keyjson
          
      - name: Render Key
        copy: content="{{ keylookup }}" dest=/etc/ssl/private/hashi.key
        vars:
          keylookup: "{{ keyjson.json | json_query(keyquery)}}"
          keyquery: "data.key"

      - name: Get Cert
        uri:
          url: http://95.217.43.28:8200/v1/testcert/cert
          method: GET
          headers: 
            X-Vault-Token: "{{token}}"
          return_content: yes
        register: certjson

      - name: Render Cert
        copy: content="{{ certlookup }}" dest=/etc/ssl/certs/hashi.cert
        vars:
          certlookup: "{{ certjson.json | json_query(certquery)}}"
          certquery: "data.cert"

    tasks:

      - name: Copy Files
        copy: src={{ item.src }} dest={{ item.dest}}
        with_items:
          - { src: 'files/services.key', dest: '{{ key_file }}'} #mode 400
          - { src: 'files/services.crt', dest: '{{ cert_file }}'} #mode=644
          - { src: 'files/ssl.conf', dest: '{{ nginx_dest }}'}
          - { src: 'files/default.conf', dest: '{{ nginx_dest2 }}'}

      - name: Restart Nginx to bring it up on 443
        ansible.builtin.service:
          name: nginx
          state: restarted
